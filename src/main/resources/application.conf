ktor {
    deployment {
        shutdown-url = "/shutdown"
        host = 127.0.0.1
        host = ${?HOST}
        port = 9008
        port = ${?APP_PORT}
    }
    application {
        name = telegram-bot
        name = ${?APP_NAME}
        modules = [ com.dehucka.ApplicationKt.module ]
        profiles = ${?APP_PROFILES}
    }
}

telegram-bot {
    token = "5238202878:AAHKNgYTyWL_7-SgN8yz8N-naLq_GHuhdk8"
    token = ${?TELEGRAM_BOT_TOKEN}
    username = DEHuckaTestBot
    username = ${?TELEGRAM_BOT_USERNAME}

    template {
        start = "Введите ФИО, пожалуйста"
        start-already-exists = "Здравствуй, ${name}. Я тебя помню!"
        registered = "Здравствуй, ${name}! Теперь ты можешь записывать свои часы))"
        track = "Введите название проекта \\(`proj1`, `proj2`, `proj3`\\)"
        project-not-found = "Такой проект не найден, попробуйте ещё раз"
        time-for-project = "Сколько времени вы потратили на проект '${name}'"
        input-hours-error = "Ожидается число (возможно нецелое)"
        successful-input = "Вы успешно записали ${hours} часов"
    }
}

database {
    url = "jdbc:postgresql://localhost:5432/coworker_bot"
    url = ${?DATA_SOURCE_URL}
    username = postgres
    username = ${?DATA_SOURCE_USERNAME}
    password = 11
    password = ${?DATA_SOURCE_PASSWORD}
}

config-service {
    enabled = false
    url = "http://127.0.0.1:9000"
    url = ${?CONFIG_SERVICE_URL}
}

eureka {
    enabled = false
    client {
        application-name = ${ktor.application.name}
        hostname = "127.0.0.1"
        hostname = ${?EUREKA_CLIENT_HOSTNAME}
        non-secure-port = ${ktor.deployment.port}
    }
    server {
        service-url = "http://127.0.0.1:8761/eureka"
        service-url = ${?EUREKA_SERVER_SERVICE_URL}
        initial-instance-info-replication-interval-seconds = 20
        registry-fetch-interval-seconds = 2
    }
}